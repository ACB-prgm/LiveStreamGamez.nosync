[gd_scene load_steps=29 format=2]

[ext_resource path="res://Scenes/Main.gd" type="Script" id=2]
[ext_resource path="res://Images/circle.png" type="Texture" id=3]
[ext_resource path="res://Images/Circle_shadow.png" type="Texture" id=4]
[ext_resource path="res://Images/IntermissionImages.png" type="Texture" id=5]
[ext_resource path="res://Images/circle_shadow_noshadow.png" type="Texture" id=6]
[ext_resource path="res://Images/IntermissionImages_5.png" type="Texture" id=7]
[ext_resource path="res://Images/IntermissionImages_6.png" type="Texture" id=8]
[ext_resource path="res://Images/IntermissionImages_03.png" type="Texture" id=9]
[ext_resource path="res://Images/IntermissionImages_2.png" type="Texture" id=10]
[ext_resource path="res://Images/IntermissionImages_4.png" type="Texture" id=11]
[ext_resource path="res://Resources/Shaders/MaskShader.gdshader" type="Shader" id=12]
[ext_resource path="res://Images/bar.png" type="Texture" id=13]
[ext_resource path="res://Images/Head.png" type="Texture" id=14]
[ext_resource path="res://Images/Eye_Right.png" type="Texture" id=15]
[ext_resource path="res://Images/Eye_Left.png" type="Texture" id=16]
[ext_resource path="res://Resources/TMFont.tres" type="DynamicFont" id=17]

[sub_resource type="Shader" id=4]
code = "shader_type canvas_item;

void fragment(){
	
	vec4 color = vec4(texture(SCREEN_TEXTURE, SCREEN_UV).rgb, texture(TEXTURE, UV).a);
	
	COLOR = vec4(1.0 - color.rgb,  color.a);
}"

[sub_resource type="ShaderMaterial" id=5]
shader = SubResource( 4 )

[sub_resource type="ShaderMaterial" id=9]
resource_local_to_scene = true
shader = ExtResource( 12 )
shader_param/scale = Vector2( 1, 1 )
shader_param/movement_dir = Vector2( 1, 1 )
shader_param/speed = 0.0
shader_param/snap_distance = 0.0
shader_param/texture_mask = ExtResource( 6 )

[sub_resource type="ShaderMaterial" id=10]
resource_local_to_scene = true
shader = ExtResource( 12 )
shader_param/scale = Vector2( 1, 1 )
shader_param/movement_dir = Vector2( -1, 0 )
shader_param/speed = 0.02
shader_param/snap_distance = 0.0
shader_param/texture_mask = ExtResource( 6 )

[sub_resource type="ShaderMaterial" id=13]
resource_local_to_scene = true
shader = ExtResource( 12 )
shader_param/scale = Vector2( 1, 1 )
shader_param/movement_dir = Vector2( 1, 0 )
shader_param/speed = 0.1
shader_param/snap_distance = 0.083
shader_param/texture_mask = ExtResource( 6 )

[sub_resource type="ShaderMaterial" id=11]
resource_local_to_scene = true
shader = ExtResource( 12 )
shader_param/scale = Vector2( 1, 1 )
shader_param/movement_dir = Vector2( 1, 0 )
shader_param/speed = 0.04
shader_param/snap_distance = 0.0
shader_param/texture_mask = ExtResource( 6 )

[sub_resource type="ShaderMaterial" id=7]
resource_local_to_scene = true
shader = ExtResource( 12 )
shader_param/scale = Vector2( 1, 1 )
shader_param/movement_dir = Vector2( 1, 1 )
shader_param/speed = 0.0
shader_param/snap_distance = 0.0
shader_param/texture_mask = ExtResource( 6 )

[sub_resource type="ShaderMaterial" id=12]
resource_local_to_scene = true
shader = ExtResource( 12 )
shader_param/scale = Vector2( 1, 1 )
shader_param/movement_dir = Vector2( 1, 1 )
shader_param/speed = 0.0
shader_param/snap_distance = 0.0
shader_param/texture_mask = ExtResource( 6 )

[sub_resource type="Shader" id=14]
code = "// Hey this is Hei! This shader \"fakes\" a 3D-camera perspective on CanvasItems.
// License: MIT

shader_type canvas_item;

// Camera FOV
uniform float fov : hint_range(1, 179) = 90;
uniform bool cull_back = true;
uniform float y_rot : hint_range(-180, 180) = 0.0;
uniform float x_rot : hint_range(-180, 180) = 0.0;
// At 0, the image retains its size when unrotated.
// At 1, the image is resized so that it can do a full
// rotation without clipping inside its rect.
uniform float inset : hint_range(0, 1) = 0.0;
// Consider changing this to a uniform and changing it from code

varying flat vec2 o;
varying vec3 p;

const float PI = 3.14159;

// Creates rotation matrix
void vertex(){
	float sin_b = sin(y_rot / 180.0 * PI);
	float cos_b = cos(y_rot / 180.0 * PI);
	float sin_c = sin(x_rot / 180.0 * PI);
	float cos_c = cos(x_rot / 180.0 * PI);
	
	mat3 inv_rot_mat;
	inv_rot_mat[0][0] = cos_b;
	inv_rot_mat[0][1] = 0.0;
	inv_rot_mat[0][2] = -sin_b;
	
	inv_rot_mat[1][0] = sin_b * sin_c;
	inv_rot_mat[1][1] = cos_c;
	inv_rot_mat[1][2] = cos_b * sin_c;
	
	inv_rot_mat[2][0] = sin_b * cos_c;
	inv_rot_mat[2][1] = -sin_c;
	inv_rot_mat[2][2] = cos_b * cos_c;
	
	
	float t = tan(fov / 360.0 * PI);
	p = inv_rot_mat * vec3((UV - 0.5), 0.5 / t);
	float v = (0.5 / t) + 0.5;
	p.xy *= v * inv_rot_mat[2].z;
	o = v * inv_rot_mat[2].xy;

	VERTEX += (UV - 0.5) / TEXTURE_PIXEL_SIZE * t * (1.0 - inset);
}

void fragment(){
	if (cull_back && p.z <= 0.0) discard;
	vec2 uv = (p.xy / p.z).xy - o;
    COLOR = texture(TEXTURE, uv + 0.5);
	COLOR.a *= step(max(abs(uv.x), abs(uv.y)), 0.5);
}"

[sub_resource type="ShaderMaterial" id=15]
shader = SubResource( 14 )
shader_param/fov = 179.0
shader_param/cull_back = true
shader_param/y_rot = 0.0
shader_param/x_rot = 0.0
shader_param/inset = 0.0

[sub_resource type="StyleBoxFlat" id=17]
bg_color = Color( 0.14902, 0.14902, 0.14902, 1 )
corner_radius_top_left = 2
corner_radius_top_right = 2
corner_radius_bottom_right = 2
corner_radius_bottom_left = 2

[sub_resource type="StyleBoxFlat" id=16]
bg_color = Color( 0.14902, 0.14902, 0.14902, 1 )
corner_radius_top_left = 2
corner_radius_top_right = 2
corner_radius_bottom_right = 2
corner_radius_bottom_left = 2
shadow_size = 6

[node name="Main" type="Control"]
anchor_right = 1.0
anchor_bottom = 1.0
script = ExtResource( 2 )

[node name="Tween" type="Tween" parent="."]

[node name="Circle" type="TextureRect" parent="."]
material = SubResource( 5 )
anchor_right = 1.0
anchor_bottom = 1.0
texture = ExtResource( 3 )
expand = true
stretch_mode = 6

[node name="CenterCircle" type="TextureRect" parent="."]
anchor_right = 1.0
anchor_bottom = 1.0
texture = ExtResource( 4 )
expand = true
stretch_mode = 6

[node name="WhiteLinesTop" type="TextureRect" parent="."]
material = SubResource( 9 )
anchor_right = 1.0
anchor_bottom = 1.0
rect_pivot_offset = Vector2( 960, 270 )
texture = ExtResource( 8 )
expand = true
stretch_mode = 1
flip_h = true

[node name="AngledLines" type="TextureRect" parent="."]
material = SubResource( 10 )
anchor_right = 1.0
anchor_bottom = 1.0
texture = ExtResource( 7 )
expand = true
stretch_mode = 6

[node name="GrayBars" type="TextureRect" parent="."]
material = SubResource( 13 )
anchor_right = 1.0
anchor_bottom = 1.0
texture = ExtResource( 11 )
expand = true
stretch_mode = 6

[node name="Colors" type="TextureRect" parent="."]
material = SubResource( 11 )
anchor_right = 1.0
anchor_bottom = 1.0
texture = ExtResource( 9 )
expand = true
stretch_mode = 6

[node name="NumberBoxes" type="TextureRect" parent="."]
material = SubResource( 7 )
anchor_right = 1.0
anchor_bottom = 1.0
texture = ExtResource( 10 )
expand = true
stretch_mode = 6

[node name="BotomColorsAndTopWhite" type="TextureRect" parent="."]
material = SubResource( 12 )
anchor_right = 1.0
anchor_bottom = 1.0
texture = ExtResource( 5 )

[node name="Bar" type="TextureRect" parent="."]
anchor_right = 1.0
anchor_bottom = 1.0
rect_pivot_offset = Vector2( 960, 540 )
texture = ExtResource( 13 )

[node name="Control" type="Control" parent="."]
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
margin_left = -20.0
margin_top = -20.0
margin_right = 20.0
margin_bottom = 20.0

[node name="EyeLeft" type="TextureRect" parent="Control"]
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
margin_left = -150.0
margin_top = -150.0
margin_right = 150.0
margin_bottom = 150.0
texture = ExtResource( 16 )
expand = true
stretch_mode = 6

[node name="EyeRight" type="TextureRect" parent="Control"]
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
margin_left = -150.0
margin_top = -150.0
margin_right = 150.0
margin_bottom = 150.0
texture = ExtResource( 15 )
expand = true
stretch_mode = 6

[node name="Head" type="TextureRect" parent="Control"]
material = SubResource( 15 )
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
texture = ExtResource( 14 )
expand = true
stretch_mode = 6

[node name="Button" type="Button" parent="."]
margin_left = 835.0
margin_top = 196.0
margin_right = 1085.0
margin_bottom = 246.0
custom_colors/font_color = Color( 1, 1, 1, 1 )
custom_colors/font_color_hover = Color( 1, 0, 0, 1 )
custom_colors/font_color_pressed = Color( 1, 1, 1, 1 )
custom_fonts/font = ExtResource( 17 )
custom_styles/hover = SubResource( 17 )
custom_styles/pressed = SubResource( 16 )
custom_styles/focus = SubResource( 16 )
custom_styles/disabled = SubResource( 16 )
custom_styles/normal = SubResource( 16 )
text = "SIGN IN"

[connection signal="tween_completed" from="Tween" to="." method="_on_Tween_tween_completed"]
[connection signal="pressed" from="Button" to="." method="_on_Button_pressed"]
